x_0 =[0.312242700000000; 0.580339800000000;  0;  0]
P_0 =[1, 0, 0, 0; 0, 1, 0 ,0; 0, 0, 1000, 0; 0, 0, 0, 1000]
F_1 = [1, 0, 0.05, 0; 0, 1.0, 0, 0.05; 0, 0, 1, 0; 0, 0, 0, 1]

Q_1 =[14.0625e-006     0.0000e+000   562.5000e-006     0.0000e+000;
     0.0000e+000    14.0625e-006     0.0000e+000   562.5000e-006;
   562.5000e-006     0.0000e+000    22.5000e-003     0.0000e+000;
     0.0000e+000   562.5000e-006     0.0000e+000    22.5000e-003]


% predict
x_1 = F_1*x_0
P_1 = F_1*P_0*F_1.' + Q_1
x_1 = [0.3122 0.5803  0  0]
P_1 =1.0000         0    0.0006         0
         0    1.0000         0    0.0006
    0.0006         0    2.5225         0
         0    0.0006         0    2.5225


%update H_1
px = x_1(1);
py = x_1(2);
vx = x_1(3);
vy = x_1(4);
z = px^2 + py^2;
a = (vx*py - vy*px)/z^1.5;

H_1 = [px/(z^0.5), py/(z^0.5), 0, 0; -py/z, px/z, 0, 0; py*a, -px*a, px/(z^0.5), py/(z^0.5)]
% update R_radar
R_radar= [0.09  0  0; 0  0.0009  0; 0  0  0.09]

z_1 = [1.014892;	5.543292e-01;	4.892807]
z = px^2 + py^2
ro = z^0.5
theta = atan2(py, px)
ro_dot = (px * vx + py * vy) / ro
z_pred =[ ro; theta; ro_dot]

#update
S = (H_1*P_1*transpose(H_1)+ R_radar)
K_1 = P_1*transpose(H_1)*inv(S)
x_1 = x_1 + K_1*(z_1 -z_pred)

S=    1.0900         0    0.0006
    0.0000    2.3035    0.0000
    0.0006    0.0000    2.6125
x_1 = [0.7703;   0.7047;   2.2386;    4.1602]
x_2 = F_1*x_1
Q_2 = 






